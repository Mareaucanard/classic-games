name: Publish_Release

on:
  push:
    tags:        
      - '*'

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: classic-games

jobs:
  export-windows:
    runs-on: ubuntu-22.04
    container: barichello/godot-ci:4.4
  
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot || true
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable || true

      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          godot --headless --verbose --export-release "Windows Desktop" "build/windows/classic-games.exe"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows/classic-games.exe

  export-linux:
    name: Linux Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable || true
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          godot --headless --verbose --export-release "Linux" "build/linux/classic-games.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux/classic-games.x86_64

  upload-release:
      name: Create Release
      runs-on: ubuntu-latest
      needs: [export-linux, export-windows]
      permissions:
            contents: write
            actions: write
            attestations: write
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        
        - name: Download build artifacts
          uses: actions/download-artifact@v4
          with:
            path: build

        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            body: ""
            draft: false
            prerelease: false
        

        - name: Upload Windows
          id: upload-release-asset-windows 
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: build/windows/classic-games.exe
            asset_name: classic-games.exe
            asset_content_type: application/exe

        - name: Upload Linux
          id: upload-release-asset-linux
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: build/linux/classic-games.x86_64
            asset_name: classic-games.x86_64
            asset_content_type: application/x86_64